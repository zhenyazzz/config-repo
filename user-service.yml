spring:
  application:
    name: user-service
  cloud:
    config:
      uri: ${CONFIG_SERVER_URI:http://localhost:8888}
      fail-fast: false
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:marketly_userservice_db}
    username: ${DATABASE_USER:postgres}
    password: ${DATABASE_PASSWORD:root}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  security:
    user:
      name: ${SECURITY_USER:admin}
      password: ${SECURITY_PASSWORD:admin}
      roles: ${SECURITY_ROLES:ADMIN}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

# Fallback конфигурация (если Config Server недоступен)
server:
  port: ${SERVER_PORT:8082}

logging:
  level:
    org.springframework.security: DEBUG

jwt:
  secret-key: ${JWT_SECRET_KEY:aXv7j3tR8kL9mQp2sV5y7x9A1zC4E7H0bW3cZ6u8oP1dF4rT5nJ9iK2lO0q}
  access-token-expiration: ${JWT_ACCESS_EXPIRATION:86400000}
  refresh-token-expiration: ${JWT_REFRESH_EXPIRATION:2592000000}
  issuer: ${JWT_ISSUER:auth-service}
  header: ${JWT_HEADER:Authorization}
  prefix: ${JWT_PREFIX:Bearer}
  token-type: ${JWT_TOKEN_TYPE:JWT}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  api-docs:
    path: /v3/api-docs
