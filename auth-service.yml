server:
  port: ${AUTH_PORT:8081}

spring:
  application:
    name: auth-service
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:postgres}:${DATABASE_PORT:5432}/${DATABASE_NAME:marketly_user_db}
    username: ${DATABASE_USER:postgres}
    password: ${DATABASE_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${KAFKA_HOST:kafka-broker}:${KAFKA_PORT:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://eureka-service:8761/eureka/}
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    org.springframework.security: DEBUG
    org.com.authservice: DEBUG

jwt:
  secret-key: ${JWT_SECRET_KEY:aXv7j3tR8kL9mQp2sV5y7x9A1zC4E7H0bW3cZ6u8oP1dF4rT5nJ9iK2lO0q}
  access-token-expiration: ${JWT_ACCESS_EXPIRATION:86400000}
  refresh-token-expiration: ${JWT_REFRESH_EXPIRATION:2592000000}
  issuer: auth-service
  header: Authorization
  prefix: Bearer
  token-type: JWT

