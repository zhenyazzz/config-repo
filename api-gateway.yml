server:
  port: ${API_GATEWAY_PORT:8080}

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: false
              lower-case-service-id: true
          routes:
            - id: auth-service
              uri: lb://auth-service
              predicates:
                - Path=/api/auth/** 
              filters:
                - name: CircuitBreaker
                  args:
                    name: authServiceCircuitBreaker
                    fallbackUri: forward:/fallback/auth
            - id: user-service
              uri: lb://user-service
              predicates:
                - Path=/api/users/**
              filters:
                - name: CircuitBreaker
                  args:
                    name: userServiceCircuitBreaker
                    fallbackUri: forward:/fallback/user
              

            - id: product-service
              uri: lb://product-service
              predicates:
                - Path=/api/products/**
              filters:
                - StripPrefix=1
                - name: JwtAuthenticationFilter
                - name: CircuitBreaker
                  args:
                    name: productServiceCircuitBreaker
                    fallbackUri: forward:/fallback/product

            - id: cart-service
              uri: lb://cart-service
              predicates:
                - Path=/api/cart/**
              filters:
                - StripPrefix=1
                - name: JwtAuthenticationFilter
                - name: CircuitBreaker
                  args:
                    name: cartServiceCircuitBreaker
                    fallbackUri: forward:/fallback/cart

            - id: order-service
              uri: lb://order-service
              predicates:
                - Path=/api/orders/**
              filters:
                - StripPrefix=1
                - name: JwtAuthenticationFilter
                - name: CircuitBreaker
                  args:
                    name: orderServiceCircuitBreaker
                    fallbackUri: forward:/fallback/order

            - id: payment-service
              uri: lb://payment-service
              predicates:
                - Path=/api/payments/**
              filters:
                - StripPrefix=1
                - name: JwtAuthenticationFilter
                - name: CircuitBreaker
                  args:
                    name: paymentServiceCircuitBreaker
                    fallbackUri: forward:/fallback/payment

            - id: notification-service
              uri: lb://notification-service
              predicates:
                - Path=/api/notifications/**
              filters:
                - StripPrefix=1
                - name: JwtAuthenticationFilter
                - name: CircuitBreaker
                  args:
                    name: notificationServiceCircuitBreaker
                    fallbackUri: forward:/fallback/notification

            - id: eureka-service
              uri: http://eureka-service:8761
              predicates:
                - Path=/eureka/**
              filters:
                - StripPrefix=1

    circuitbreaker:
      resilience4j:
        enabled: true

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    registerWithEureka: true
    fetchRegistry: true
  instance:
    hostname: api-gateway
    preferIpAddress: false

jwt:
  secret-key: ${JWT_SECRET_KEY:aXv7j3tR8kL9mQp2sV5y7x9A1zC4E7H0bW3cZ6u8oP1dF4rT5nJ9iK2lO0q}
  access-token-expiration: ${JWT_ACCESS_EXPIRATION:86400000}
  refresh-token-expiration: ${JWT_REFRESH_EXPIRATION:2592000000}
  header: Authorization
  issuer: auth-service
  prefix: Bearer
  token-type: JWT

logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG


management:
  endpoints:
    web:
      exposure:
        include: health,info
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    info:
      env:
        enabled: true

resilience4j:
  circuitbreaker:
    instances:
      userServiceCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
      productServiceCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
      authServiceCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
      cartServiceCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
      orderServiceCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
      paymentServiceCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
      notificationServiceCircuitBreaker:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
